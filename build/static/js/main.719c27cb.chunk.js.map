{"version":3,"sources":["redux/alert/alertSlice.js","api/movies.js","redux/movies/moviesSlice.js","components/SearchBar.js","components/Alert.js","pages/Home.js","components/MovieCard.js","pages/MovieList.js","pages/Movie.js","pages/NotFound.js","App.js","redux/counter/counterAPI.js","redux/counter/counterSlice.js","redux/store.js","serviceWorker.js","index.js"],"names":["alertSlice","createSlice","name","initialState","value","reducers","showAlert","state","hideAlert","actions","fetchMovies","keyword","a","axios","get","then","response","data","Search","fetchMoviesById","id","getMovies","createAsyncThunk","movies","moviesSlice","status","error","extraReducers","pending","action","fulfilled","payload","rejected","message","SearchBar","dispatch","useDispatch","history","useHistory","useState","form","setForm","className","type","placeholder","onInput","e","target","onClick","preventDefault","push","style","transform","Alert","role","Home","isFormEmpty","useSelector","alert","MovieCard","props","movie","Poster","Title","Year","imdbID","src","alt","to","width","fontSize","MovieList","map","Movie","useParams","setMovie","useEffect","res","Released","Runtime","Genre","Director","Writer","Actors","Plot","Country","imdbRating","posterURL","height","backgroundImage","backgroundSize","scope","NotFound","App","path","exact","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","counterSlice","increment","decrement","incrementByAmount","builder","addCase","store","configureStore","reducer","counter","counterReducer","alertReducer","moviesReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.719c27cb.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const alertSlice = createSlice({\n  name: \"alert\",\n  initialState: {\n    value: false,\n  },\n  reducers: {\n    showAlert: (state) => {\n      state.value = true;\n    },\n    hideAlert: (state) => {\n      state.value = false;\n    },\n  },\n});\n\nexport const { showAlert, hideAlert } = alertSlice.actions;\n\nexport default alertSlice.reducer;\n","import axios from \"axios\";\n\nexport const fetchMovies = async (keyword) => {\n  return await axios\n    .get(`https://www.omdbapi.com/?apikey=3fa7021f&s=${keyword}`)\n    .then((response) => response.data.Search);\n};\n\nexport const fetchMoviesById = async (id) => {\n  return await axios\n    .get(`https://www.omdbapi.com/?apikey=3fa7021f&i=${id}&plot=full`)\n    .then((response) => response.data);\n};\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchMovies } from \"../../api/movies\";\n\nexport const getMovies = createAsyncThunk(\n  \"movies/getMovies\",\n  async (keyword) => {\n    const movies = await fetchMovies(keyword);\n    return movies;\n  }\n);\n\nexport const moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    data: [],\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [getMovies.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getMovies.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n      state.data = action.payload;\n    },\n    [getMovies.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport default moviesSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { showAlert, hideAlert } from \"../redux/alert/alertSlice\";\nimport { getMovies } from \"../redux/movies/moviesSlice\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchBar = () => {\n  /* ******************\n   *  HOOK\n   ********************/\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  /* ******************\n   *  STATE\n   ********************/\n  const [form, setForm] = useState(\"\");\n\n  /* ******************\n   *  EVENT HANLDER\n   ********************/\n  const handleInput = (e) => {\n    dispatch(hideAlert());\n    setForm(e.target.value);\n  };\n\n  const handleClickSearch = (e) => {\n    e.preventDefault();\n    if (!form) {\n      // if empty\n      dispatch(showAlert());\n    } else {\n      dispatch(getMovies(form));\n      history.push(\"/movies\");\n    }\n  };\n\n  /* ******************\n   *  RENDER\n   ********************/\n  return (\n    <form id=\"search-bar\" className=\"input-group mt-5 w-100 shadow\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search film\"\n        onInput={handleInput}\n        value={form}\n      />\n      <button\n        className=\"btn btn-dark\"\n        type=\"submit\"\n        id=\"search-button\"\n        onClick={handleClickSearch}\n      >\n        Search{\" \"}\n        <i className=\"fas fa-search\" style={{ transform: \"rotate(90deg)\" }}></i>\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction Alert() {\n  return (\n    <div className=\"alert alert-warning\" role=\"alert\">\n      Search film field is required\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport Alert from \"../components/Alert\";\nimport { useSelector } from \"react-redux\";\n\nconst Home = () => {\n  const isFormEmpty = useSelector((state) => state.alert.value);\n\n  return (\n    <div className=\"container d-flex flex-column justify-content-center align-items-center min-vh-100\">\n      {isFormEmpty && <Alert />}\n      <SearchBar />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieCard = (props) => {\n  const { Poster, Title, Year, imdbID } = props.movie;\n\n  return (\n    <div>\n      <div className=\"col\">\n        <div className=\"card shadow\">\n          <img src={Poster} className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title display-6\">\n              {Title} ({Year})\n            </h5>\n            <Link\n              to={`/movies/${imdbID}`}\n              className=\"btn btn-dark d-block mt-4 ms-auto stretched-link\"\n              style={{ width: \"fit-content\", fontSize: \"20px\" }}\n            >\n              View details\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport MovieCard from \"../components/MovieCard\";\nimport { useSelector } from \"react-redux\";\n\nconst MovieList = () => {\n  const movies = useSelector((state) => state.movies.data);\n\n  return (\n    <div className=\"container d-flex flex-column justify-content-start align-items-center min-vh-100\">\n      <SearchBar />\n\n      <div className=\"row row-cols-1 row-cols-md-2 g-5 my-3\">\n        {movies && movies.map((movie) => <MovieCard movie={movie} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesById } from \"../api/movies\";\n\nconst Movie = () => {\n  const { imdbID } = useParams();\n  const [movie, setMovie] = useState(\"\");\n\n  useEffect(() => {\n    fetchMoviesById(imdbID).then((res) => setMovie(res));\n  }, [imdbID]);\n\n  const {\n    Title,\n    Year,\n    Released,\n    Runtime,\n    Genre,\n    Director,\n    Writer,\n    Actors,\n    Plot,\n    Country,\n    Poster,\n    imdbRating,\n  } = movie;\n\n  const posterURL = `url(${Poster})`;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"display-3 my-4\">\n        {Title} ({Year})\n      </h1>\n      <div\n        style={{\n          height: \"500px\",\n          backgroundImage: posterURL,\n          backgroundSize: \"250px\",\n        }}\n        className=\"overflow-hidden\"\n      >\n        {/* <img src=\"../banner.jpg\" alt=\"...\" className=\"w-100\" /> */}\n      </div>\n      <table id=\"table-detail\" className=\"table my-4\">\n        <tbody>\n          <tr>\n            <th scope=\"row\">Released</th>\n            <td className=\"text-secondary\">{Released}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Runtime</th>\n            <td className=\"text-secondary\">{Runtime}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Genre</th>\n            <td className=\"text-secondary\">{Genre}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Director</th>\n            <td className=\"text-secondary\">{Director}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Writer</th>\n            <td className=\"text-secondary\">{Writer}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Actors</th>\n            <td className=\"text-secondary\">{Actors}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Country</th>\n            <td className=\"text-secondary\">{Country}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Imdb Rating</th>\n            <td className=\"text-secondary\">{imdbRating}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Plot</th>\n            <td className=\"text-secondary\">{Plot}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center\">\n      <p className=\"display-1 text-center\">404</p>\n      <p className=\"display-5 text-center\">Page Not Found :{\"(\"}</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport MovieList from \"./pages/MovieList\";\nimport Movie from \"./pages/Movie\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/movies/:imdbID\">\n          <Movie />\n        </Route>\n        <Route path=\"/movies\">\n          <MovieList />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter/counterSlice\";\nimport alertReducer from \"./alert/alertSlice\";\nimport moviesReducer from \"./movies/moviesSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    alert: alertReducer,\n    movies: moviesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}